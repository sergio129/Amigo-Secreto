"use strict";(()=>{var e={};e.id=628,e.ids=[628],e.modules={38013:e=>{e.exports=require("mongodb")},72934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},54580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},45869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},27790:e=>{e.exports=require("assert")},78893:e=>{e.exports=require("buffer")},84770:e=>{e.exports=require("crypto")},17702:e=>{e.exports=require("events")},32615:e=>{e.exports=require("http")},35240:e=>{e.exports=require("https")},86624:e=>{e.exports=require("querystring")},17360:e=>{e.exports=require("url")},21764:e=>{e.exports=require("util")},71568:e=>{e.exports=require("zlib")},6071:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>g,patchFetch:()=>f,requestAsyncStorage:()=>m,routeModule:()=>p,serverHooks:()=>v,staticGenerationAsyncStorage:()=>x});var s={};t.r(s),t.d(s,{GET:()=>d,PATCH:()=>c});var o=t(49303),n=t(88716),a=t(60670),i=t(87070),u=t(84427),l=t(2021);async function d(){try{let e=await (0,u.aR)(),r=(0,u.kF)(e);if(r)return r;let t=(await l.Z).db("SaludDirecta"),s=(await t.collection("amigo_secreto_users").find({}).toArray()).map(e=>({_id:e._id.toString(),email:e.email,name:e.name,role:e.role,maxEvents:e.maxEvents||1,createdAt:e.createdAt,updatedAt:e.updatedAt}));return i.NextResponse.json(s)}catch(e){return console.error("Error fetching users:",e),i.NextResponse.json({error:"Error interno del servidor"},{status:500})}}async function c(e){try{let r=await (0,u.aR)(),s=(0,u.kF)(r);if(s)return s;let{userId:o,maxEvents:n,role:a}=await e.json();if(!o)return i.NextResponse.json({error:"userId es requerido"},{status:400});if(o===r.id&&a&&"admin"!==a)return i.NextResponse.json({error:"No puedes cambiar tu propio rol de administrador"},{status:400});let d={updatedAt:new Date};if(void 0!==n){if(n<1)return i.NextResponse.json({error:"maxEvents debe ser al menos 1"},{status:400});d.maxEvents=n}if(void 0!==a){if(!["admin","guest"].includes(a))return i.NextResponse.json({error:'Rol inv\xe1lido. Debe ser "admin" o "guest"'},{status:400});d.role=a,"guest"===a&&void 0===n&&(d.maxEvents=5)}if(1===Object.keys(d).length)return i.NextResponse.json({error:"Debe proporcionar al menos un campo para actualizar"},{status:400});let c=(await l.Z).db("SaludDirecta"),p=await c.collection("amigo_secreto_users").updateOne({_id:new(await Promise.resolve().then(t.t.bind(t,38013,23))).ObjectId(o)},{$set:d});if(0===p.matchedCount)return i.NextResponse.json({error:"Usuario no encontrado"},{status:404});return i.NextResponse.json({success:!0})}catch(e){return console.error("Error updating user:",e),i.NextResponse.json({error:"Error interno del servidor"},{status:500})}}let p=new o.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/admin/users/route",pathname:"/api/admin/users",filename:"route",bundlePath:"app/api/admin/users/route"},resolvedPagePath:"E:\\Proyectos\\Amigo Secreto\\app\\api\\admin\\users\\route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:m,staticGenerationAsyncStorage:x,serverHooks:v}=p,g="/api/admin/users/route";function f(){return(0,a.patchFetch)({serverHooks:v,staticGenerationAsyncStorage:x})}},84427:(e,r,t)=>{t.d(r,{aR:()=>a,kF:()=>u,mk:()=>i,zx:()=>l});var s=t(75571),o=t(90455),n=t(87070);async function a(){let e=await (0,s.getServerSession)(o.L);return e?.user?e.user:null}function i(e){return e?null:n.NextResponse.json({error:"No autorizado"},{status:401})}function u(e){return i(e)||("admin"!==e.role?n.NextResponse.json({error:"Acceso denegado. Se requiere rol de administrador"},{status:403}):null)}function l(e,r){return i(e)||("admin"!==e.role&&e.email!==r?n.NextResponse.json({error:"Acceso denegado. Solo puedes acceder a tus propios eventos"},{status:403}):null)}},90455:(e,r,t)=>{t.d(r,{L:()=>i});var s=t(53797),o=t(42023),n=t.n(o),a=t(2021);let i={providers:[(0,s.Z)({name:"credentials",credentials:{email:{label:"Email",type:"email"},password:{label:"Password",type:"password"}},async authorize(e){if(!e?.email||!e?.password)return null;try{let r=(await a.Z).db("SaludDirecta"),t=await r.collection("amigo_secreto_users").findOne({email:e.email});if(!t)return console.log(`Usuario no encontrado: ${e.email}`),null;if(!await n().compare(e.password,t.password))return console.log(`Contrase\xf1a inv\xe1lida para: ${e.email}`),null;return console.log(`Login exitoso para: ${e.email} (rol: ${t.role})`),{id:t._id.toString(),email:t.email,name:t.name,role:t.role,maxEvents:t.maxEvents}}catch(e){return console.error("Error durante la autenticaci\xf3n:",e),null}}})],session:{strategy:"jwt"},pages:{signIn:"/admin/login"},callbacks:{jwt:async({token:e,user:r})=>(r&&(e.id=r.id,e.role=r.role,e.maxEvents=r.maxEvents),e),session:async({session:e,token:r})=>(r&&e.user&&(e.user.id=r.id,e.user.role=r.role,e.user.maxEvents=r.maxEvents),e)}}},2021:(e,r,t)=>{t.d(r,{Z:()=>n});var s=t(38013);if(!process.env.MONGODB_URI)throw Error('Invalid/Missing environment variable: "MONGODB_URI"');let o=process.env.MONGODB_URI,n=new s.MongoClient(o,{}).connect()}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[276,972,23,790],()=>t(6071));module.exports=s})();